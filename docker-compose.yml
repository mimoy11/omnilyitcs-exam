version: '3.7'

services:

    client:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        tty: true
        ports:
            - "3000:80"
        volumes: 
            - ./frontend:/app
            - /app/node_modules
        networks:
            - frontend

    mongodb:
        image: mongo
        container_name: mongo
        restart: unless-stopped
        command: mongod --auth
        environment:
            MONGO_INITDB_ROOT_USERNAME: "admin"
            MONGO_INITDB_ROOT_PASSWORD: "password"
            MONGO_INITDB_DATABASE: webapp
            MONGODB_DATA_DIR: /data/db
        volumes:
        - mongodbdata:/data/db
        networks:
        - backend

    api:
        build: 
            context: ./backend
            dockerfile: Dockerfile
        command: gunicorn --bind 0.0.0.0:5000 app:app --reload
        ports:
            - "5000:5000"
        environment:
            MONGODB_HOST: mongodb
            MONGODB_USERNAME: "apiuser"
            MONGODB_PASSWORD: "apipassword"
            MONGODB_NAME: "webapp"
            FLASK_DEBUG: 1
            FLASK_APP: app.py
            FLASK_ENV: development
        volumes:
            - ./backend:/app
        depends_on: 
            - mongodb
        networks:
            - frontend
            - backend

    nginx:
      build:
        context: ./nginx
        dockerfile: Dockerfile
      ports:
        - 1337:80
      depends_on:
        - api
        - client
      volumes:
        - static_volume:/home/app/web/static
      networks:
        - frontend
        - backend

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
volumes:
    mongodbdata:
        driver: local
    static_volume:
        driver: local
#    appdata:
#        driver: local
